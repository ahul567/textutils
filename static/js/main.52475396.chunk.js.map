{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","heading","value","onChange","event","console","log","target","style","background","rows","handleUpClick","toUpperCase","showAlert","handlelowClick","toLowerCase","handleclearText","handlecopy","document","getElementById","select","navigator","clipboard","writeText","handleExtrspaces","newText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","App","setMode","setAlert","message","setTimeout","about","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.52475396.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    \r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li> */}\r\n        \r\n      </ul>\r\n     {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form>*/}\r\n      <div className={`form-check form-switch text-${props.mode==='light'? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    \r\n  )\r\n}\r\nNavbar.propTypes={\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps={\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const[text,setText]=useState(\"\");\r\n  \r\n  const handleUpClick=()=>{\r\n    console.log(\"Uppercase was clicked\");\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"Converted to Uppercase\",\"success\")\r\n  }\r\n  const handleUpChange=(event)=>{\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n   \r\n  }\r\n  const handlelowClick=()=>{\r\n    console.log(\"Lowercase was clicked\");\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Converted to Lowercase\",\"success\")\r\n  }\r\n  const handleclearText=()=>{\r\n    let newText=\"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\",\"success\")\r\n  }\r\n  const handlecopy=()=>{\r\n    var text=document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard\",\"success\")\r\n  }\r\n  const handleExtrspaces=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed\",\"success\")\r\n  }\r\n  return (\r\n    <>\r\n   <div>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n  <label htmlFor=\"mybox\" className=\"form-label\">Textarea</label>\r\n  <textarea className=\"form-control\" value={text} onChange={handleUpChange} style={{background:props.mode==='dark'? 'grey':'white'}} id=\"mybox\" rows=\"8\"></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to uppercase</button>\r\n  <button className=\"btn btn-danger mx-2\" onClick={handlelowClick}>Convert to lowercase</button>\r\n  <button className=\"btn btn-info mx-2\" onClick={handleclearText}>Clear</button>\r\n  <button className=\"btn btn-info mx-2\" onClick={handlecopy}>Copy</button>\r\n  <button className=\"btn btn-info mx-2\" onClick={handleExtrspaces}>Extra Spaces</button>\r\n </div>\r\n<div className=\"container my-3\">\r\n  <h1>Your text summary is here</h1>\r\n  <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n  <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n  <h2>Preview</h2>\r\n  <p>{text}</p>\r\n</div>\r\n</>\r\n    \r\n   \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div>\r\n     {props.alert && (<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\nfunction App() {\n  const [mode,setMode]=useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message,type)=>{\n   setAlert({\n    msg: message,\n    type: type\n   })\n  }\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n  \n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark Mode enabled\",\"success\");\n      document.title=\"TextUtils-Dark Mode enabled\";\n      // setInterval(() => {\n      //   document.title=\"TextUtils is Now\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title=\"Install TextUtils is Amaizing Mode\";\n      // }, 2000);\n    }\n else{\n  setMode('light');\n  document.body.style.backgroundColor='white';\n  showAlert(\"Light Mode enabled\",\"success\");\n  document.title=\"TextUtils-Light Mode enabled\";\n }\n  \n}\n  return (\n    <>\n\n        <Navbar title=\"TextUtils\" about=\"About\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n       <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert} />\n        \n   \n   \n     </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}